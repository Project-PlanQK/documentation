{
  "examples": [
    {
      "query": "I am a tech lead at Lufhansa consulting. ​\nWe are looking for a way to efficiently solving​\nthe challenges in providing sufficient airspace capacity to avoid airspace congestion. ",
      "reference_contexts": [
        "Lars?"
      ],
      "reference_answer": "The problem of ATFM is described in the ATFM Use Case on PlanQK. Here are the key concepts …, also here is a link to the use case. Using  Kipu’s digitized counterdiabatic quantum optimization (DCQO) algorithms we are  able to solve larger problem than possible.​\nThe service is accessible on our Marketplace. ​",
      "response": null
    },
    {
      "query": "How can I run my existing Qiskit code on PlanQK's quantum backends?",
      "reference_contexts": [
        "In your Python code you can access the PLANQK quantum backends through the\nPlanqkQuantumProvider class. Import the class and instantiate it as shown below:\nIf you are already logged in with the PLANQK CLI you can create the provider object\nwithout any parameters:\nfrom planqk import PlanqkQuantumProvider  \nprovider = PlanqkQuantumProvider()  \nAlternatively, you can also create the provider object by passing your PLANQK personal\naccess token:\nprovider = PlanqkQuantumProvider(access_token=\"your-access-token\")  \nIf you want to log in with your organization, you can additionally pass the organization id as\na parameter. The organization id can be found in the organization settings on the PLANQK\nPlatform:\nprovider = PlanqkQuantumProvider(organization_id=\"your-organization-id\")  \nAfter you have created the provider object, you can list all backends supported by the\nPLANQK Platform and select the one you want to use."
      ],
      "reference_answer": "Use the PlanqkQuantumProviderfrom the PlanQK Quantum SDK to run your Qiskit code on supported quantum backends.",
      "response": null
    },
    {
      "query": "How do I authenticate with the PlanQK SDK to run quantum programs?",
      "reference_contexts": [
        "If you are already logged in with the PLANQK CLI you can create the provider object\nwithout any parameters:\nfrom planqk import PlanqkQuantumProvider\nprovider = PlanqkQuantumProvider()\nAlternatively, you can also create the provider object by passing your PLANQK personal\naccess token:\nprovider = PlanqkQuantumProvider(access_token=\"your-access-token\")"
      ],
      "reference_answer": "You can authenticate via CLI with planqk login -t <your token> or provide the access token directly when instantiating the provider in code.",
      "response": null
    },
    {
      "query": "How do I use the PlanQK CLI to manage my implementations?",
      "reference_contexts": [
        "Then install the PLANQK CLI globally using npm:\nnpm install -g @planqk/planqk-cli\n[...]\nplanqk init\nDESCRIPTION\nInitialize a PLANQK project to create a service.\nEXAMPLES\n$ planqk init\n[...]\nplanqk up\nDESCRIPTION\nCreates or updates a PLANQK Service\nEXAMPLES\n$ planqk up\n[...]\nplanqk run [SERVICEID]\nDESCRIPTION\nCreates a job execution of a PLANQK Service\nEXAMPLES\n$ planqk run\n$ planqk run --detached\n$ planqk run -d '{\"values\": [10,12]}' -p '{\"round_up\": true}'\n$ planqk run --data-file=./input/data.json --params-file=./input/params.json"
      ],
      "reference_answer": "Install the CLI via npm install -g @planqk/planqk-cli and use commands like planqk init, planqk up, and planqk run to manage implementations.",
      "response": null
    },
    {
      "query": "How do I create a personal access token for authentication on PlanQK?",
      "reference_contexts": [
        "To create a personal access token to your account, go to the user-menu in the top right\ncorner and click on \"Settings\". Under \"Personal Access Tokens\" you can create new\npersonal access tokens and manage existing ones."
      ],
      "reference_answer": "Go to your user settings and create a new token under “Personal Access Tokens.”",
      "response": null
    },
    {
      "query": "How do I get started creating my first implementation on PlanQK?",
      "reference_contexts": [
        "1. To create a new Implementation, visit the Create Implementation page.\n2. Enter a name for your implementation and click on the \"Create\" button.\n[...]\nMoreover, the empty implementation page provides you a set of command line instructions to clone the repository and start working on your implementation. In the following we will go through the steps to clone the repository and add a README file.\nDownloading the implementation to your local machine is called cloning. You can clone the implementation and navigate to it using the following commands:\ngit clone https://planqk:<personal-access-token>@git.platform.planqk.de/<your-user-id>/<implementation-name>.git\ncd <implementation-name>"
      ],
      "reference_answer": "Create an implementation via the platform, clone the repo locally, and add your files.",
      "response": null
    },
    {
      "query": "How do I add other users to my implementation?",
      "reference_contexts": [
        "If you want to grant certain users access to your implementation, you can add them as\nmembers. A member can have the role Viewer, Maintainer or Owner.\nViewer: Can see the implementation and its code, but cannot make any changes.\nMaintainer: Has all the rights of a Viewer and can make changes to the code.\nOwner: Has all rights of a Maintainer and can manage the implementation settings, e.g.,\nadding users, changing the visibility, and deleting the implementation."
      ],
      "reference_answer": "In your implementation settings, you can assign roles like Viewer, Maintainer, or Owner.",
      "response": null
    },
    {
      "query": "How can I quickly get started with developing and running a quantum program on PlanQK?",
      "reference_contexts": [
        "A crash course on using the PLANQK Platform to run an entire quantum workflow, from\ndevelopment to deployment .\n[...]\nTo install the PLANQK CLI, you must install Node.js 18 or higher and the npm command line\ninterface using either a Node version manager or a Node installer.\nThen install the PLANQK CLI globally using npm:\nnpm install -g @planqk/planqk-cli  \n[...]\nLogin to your account using your access token:\nplanqk login -t <your access token>  \nCreate your first project by running the following command:\nplanqk init  \n[...]\nLearn how to use our SDK to interact with our supported quantum backends.\nCheck out our tutorials to get started with the platform."
      ],
      "reference_answer": "Follow the quickstart guide to install the CLI and SDK and run your first quantum program.",
      "response": null
    },
    {
      "query": "Is there a simple example to test PlanQK’s functionality?",
      "reference_contexts": [
        "The starter templates implement quantum random number generation using either the IonQ Simulator or the Qiskit Aer Simulator."
      ],
      "reference_answer": "Yes, the coin toss example shows how to build and run a basic quantum program.",
      "response": null
    },
    {
      "query": "Are there templates to help me create a new service?",
      "reference_contexts": [
        "The PLANQK CLI provides you with a set of starter templates to help you get started\nquickly with your quantum services. You can see the full list of available templates in our\nGitLab repository. In this tutorial we will use the Docker Python Starter template to\ncreate a new service based on custom Docker containers. To initialize the project, run the\nfollowing command in your terminal:\nplanqk init "
      ],
      "reference_answer": "Yes, the PlanQK CLI provides starter templates like the Docker-Python starter template.",
      "response": null
    },
    {
      "query": "Can I reuse previously developed services for similar use cases?",
      "reference_contexts": [
        "Implementations are hosted as Git repositories, which means that version control and\ncollaboration are core elements of PLANQK. In a nutshell, an implementation (also known\nas a repo or repository) is a place where code and assets can be stored to back up your\nwork, share it with the community, and work in a team."
      ],
      "reference_answer": "Yes, services can be stored, managed, and reused via the platform.",
      "response": null
    },
    {
      "query": "How can I check whether my model processes the provided data correctly?",
      "reference_contexts": [
        "As a service host, you can view the input data and results of jobs initiated by your\nservice’s executions. Additionally, you have the ability to cancel any jobs that are queued\nfrom a service execution."
      ],
      "reference_answer": "Use job monitoring features to inspect logs and outputs to validate correct data usage.",
      "response": null
    },
    {
      "query": "Can I test a service without having programming knowledge?",
      "reference_contexts": [
        "As your service code includes a Dockerfile, you should see the \"Create Service\" button in\nthe action bar of your implementation page. Click on the button to create a new PLANQK\nservice based on your implementation. Navigate to the Services page to see your new\nservice. Congratulations, you have successfully created a PLANQK service based on your\nimplementation."
      ],
      "reference_answer": "Yes, services can be executed and managed via the UI without writing code.",
      "response": null
    },
    {
      "query": "What permissions do team members have based on their role in an organization?",
      "reference_contexts": [
        "Under the menu item \\\"Members\\\" you can easily add members to the organization and assign them one of multiple roles (similar to the roles associated to an algorithm or an implementation):\nViewer: Can see the content of the organization, but cannot edit or create content.\nMaintainer: Can create new content, edit existing content, but cannot delete content.\nOwner: Can create, edit and delete whole content of the organization. Owner can add new members, assign them different roles, and can delete members. Of course, the owner can see the entire organization profile and edit it"
      ],
      "reference_answer": "Roles like \"Owner\", \"Maintainer\", and \"Viewer\" grant different levels of access and editing rights.",
      "response": null
    },
    {
      "query": "How can I limit resource usage during service setup to stay within budget?",
      "reference_contexts": [
        "resources object Required. The resource conﬁguration of your service. [...] resources.cpu number Required. The number of virtual CPU cores to allocate for your service. resources.memory number Required. The amount of memory in GB to allocate for your service. resources.gpu object The GPU conﬁguration of your service. resources.gpu.type string The type of GPU to allocate for your service. One of NVIDIA_TESLA_T4 or NVIDIA_TESLA_V100. resources.gpu.count number The number of GPUs to allocate for your service"
      ],
      "reference_answer": "Use the planqk.json file to configure CPU, RAM, and GPU specifically to control cost.",
      "response": null
    },
    {
      "query": "Where can I view and interpret the results of my analyses?",
      "reference_contexts": [
        "By clicking the action button on the right side of each job, you can perform the following actions: Retrieve Inputs & Results: Download your quantum job inputs and results (after the job has completed) directly through the UI"
      ],
      "reference_answer": "Job results can be accessed via the dashboard or API and used for further evaluation.",
      "response": null
    },
    {
      "query": "Is it possible to compare two services in terms of efficiency and runtime?",
      "reference_contexts": [
        "PLANQK does not offer direct comparison tools, but job metrics can be manually analyzed"
      ],
      "reference_answer": "PlanQK does not offer direct comparison tools, but job metrics can be manually analyzed.",
      "response": null
    },
    {
      "query": "Which quantum approach is applied in the air cargo optimization?",
      "reference_contexts": [
        "Quantum annealing and hybrid solvers are used to optimize the routing problem."
      ],
      "reference_answer": "D-Wave's hybrid quantum-classical solvers were applied to the problem.",
      "response": null
    },
    {
      "query": "What kind of quantum ML model was tested in the fraud use case?",
      "reference_contexts": [
        "A variational quantum classifier was evaluated against classical baselines."
      ],
      "reference_answer": "A variational quantum circuit was used for binary classification.",
      "response": null
    },
    {
      "query": "Does the quantum-enhanced image model show any measurable improvement?",
      "reference_contexts": [
        "Yes, experiments showed competitive accuracy compared to classical-only models."
      ],
      "reference_answer": "The hybrid models demonstrated similar performance with reduced parameters.",
      "response": null
    },
    {
      "query": "How is quantum computing used for cybersecurity anomaly detection?",
      "reference_contexts": [
        "Quantum machine learning models are trained to identify unusual access patterns in network data."
      ],
      "reference_answer": "Quantum ML is used to identify outliers in cybersecurity-relevant datasets.",
      "response": null
    },
    {
      "query": "What benefits could this approach bring to a company’s IT security department?",
      "reference_contexts": [
        "Early detection of network anomalies can reduce reaction time and prevent breaches."
      ],
      "reference_answer": "Quantum-enhanced anomaly detection enables faster threat response.",
      "response": null
    },
    {
      "query": "What industry applications could benefit from quantum scheduling optimization?",
      "reference_contexts": [
        "Industries like manufacturing, logistics, or energy can reduce idle time and increase resource efficiency."
      ],
      "reference_answer": "This use case addresses industrial scheduling challenges.",
      "response": null
    },
    {
      "query": "How is quantum computing used to model supply chain disruptions?",
      "reference_contexts": [
        "Quantum circuits simulate uncertainty in supply chains to optimize buffer strategies."
      ],
      "reference_answer": "Quantum simulations evaluate supply chain resilience under uncertainty.",
      "response": null
    },
    {
      "query": "How can hospitals benefit from quantum radiotherapy optimization?",
      "reference_contexts": [
        "It improves patient safety by minimizing healthy tissue exposure while saving planning time."
      ],
      "reference_answer": "More accurate planning leads to better outcomes and resource efficiency.",
      "response": null
    },
    {
      "query": "I manage a battery lab at a car manufacturer. How can quantum ML help classify cell quality more efficiently?",
      "reference_contexts": [
        "Quantum classifiers can detect subtle performance differences earlier in the production process."
      ],
      "reference_answer": "Quantum classifiers improve prediction of cell performance and lifecycle.",
      "response": null
    },
    {
      "query": "Which types of input data were used to train the quantum model in this battery case?",
      "reference_contexts": [
        "Voltage, current, and impedance data from real battery tests were used."
      ],
      "reference_answer": "Battery cell lab data was used to train classifiers.",
      "response": null
    },
    {
      "query": "What kind of data preprocessing is required before passing text to the quantum model?",
      "reference_contexts": [
        "Text is embedded using classical NLP techniques before being fed to the quantum circuit."
      ],
      "reference_answer": "Text is vectorized and embedded prior to quantum input.",
      "response": null
    },
    {
      "query": "We manage multi-stage production lines. Can quantum optimization help balance load and reduce downtime?",
      "reference_contexts": [
        "Yes, quantum algorithms optimize task assignments and sequencing across production resources."
      ],
      "reference_answer": "Quantum optimization minimizes scheduling gaps and improves throughput.",
      "response": null
    },
    {
      "query": "We operate a fleet of delivery vehicles. Can quantum optimization reduce total travel time and fuel consumption?",
      "reference_contexts": [
        "Yes, quantum algorithms help solve complex routing and scheduling tasks more efficiently than classical heuristics."
      ],
      "reference_answer": "Quantum optimization is applied to last-mile delivery routing problems.",
      "response": null
    },
    {
      "query": "Can quantum anomaly detection help us monitor real-time production data for early defect detection?",
      "reference_contexts": [
        "Yes, quantum-enhanced anomaly detection identifies abnormal sensor patterns that indicate early failure."
      ],
      "reference_answer": "Quantum ML is used to detect anomalies in sensor-based manufacturing data.",
      "response": null
    },
    {
      "query": "What quantum algorithm is applied to detect anomalies in machine data?",
      "reference_contexts": [
        "A quantum kernel method combined with a support vector machine was used."
      ],
      "reference_answer": "Quantum-enhanced SVM with quantum kernels.",
      "response": null
    },
    {
      "query": "Can the quantum model handle custom constraints like vacation days and role qualifications?",
      "reference_contexts": [
        "Yes, the model includes hard and soft constraints such as availability and required skillsets."
      ],
      "reference_answer": "Custom constraints are encoded in the QUBO problem.",
      "response": null
    },
    {
      "query": "What kind of model is used to classify cancerous cells in this use case?",
      "reference_contexts": [
        "A variational quantum classifier is trained on feature-extracted image data."
      ],
      "reference_answer": "VQC applied to image classification tasks in cancer detection.",
      "response": null
    },
    {
      "query": "We want to reduce hospital readmission rates. Can quantum machine learning help us identify high-risk patients?",
      "reference_contexts": [
        "Yes, quantum classifiers can analyze patient histories to predict readmission risks with high accuracy."
      ],
      "reference_answer": "Quantum ML models predict hospital readmission likelihood.",
      "response": null
    },
    {
      "query": "We manage a portfolio of smart buildings. Can quantum computing help optimize heating and cooling schedules to reduce energy consumption?",
      "reference_contexts": [
        "Yes, quantum algorithms can optimize building control by minimizing energy costs while maintaining comfort levels."
      ],
      "reference_answer": "Quantum optimization is applied to energy-efficient HVAC control in smart buildings.",
      "response": null
    },
    {
      "query": "Can external factors like weather forecasts or occupancy be included in the optimization?",
      "reference_contexts": [
        "Yes, the model can integrate dynamic inputs such as temperature forecasts or building usage patterns."
      ],
      "reference_answer": "The model accepts external inputs for adaptive optimization.",
      "response": null
    },
    {
      "query": "What is the goal of simulating the hydrogen molecule on a quantum computer?",
      "reference_contexts": [
        "To validate the accuracy and feasibility of VQE algorithms on small-scale quantum systems."
      ],
      "reference_answer": "Uses VQE to calculate the ground state energy of H₂.",
      "response": null
    },
    {
      "query": "Which dataset and features are typically used in fraud detection quantum models?",
      "reference_contexts": [
        "The model is trained on transaction metadata like time, amount, and device ID."
      ],
      "reference_answer": "Uses anonymized transaction metadata for quantum fraud classification.",
      "response": null
    },
    {
      "query": "What features are used to train the quantum model in the readmission prediction task?",
      "reference_contexts": [
        "Structured EHR data like age, diagnosis codes, previous admissions, and length of stay."
      ],
      "reference_answer": "Structured patient data is used as model input.",
      "response": null
    }
  ]
}